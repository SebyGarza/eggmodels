[{"/Users/sebygarza/Documents/portfolio/eggmodels/src/index.js":"1","/Users/sebygarza/Documents/portfolio/eggmodels/src/App.js":"2","/Users/sebygarza/Documents/portfolio/eggmodels/src/reportWebVitals.js":"3","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Content.js":"4","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/NavBar.js":"5","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Blog.js":"6","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Rankings.js":"7","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Parlay.js":"8","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/ScheduleNFL.js":"9","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Playoffs.js":"10","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/ScheduleMLB.js":"11"},{"size":535,"mtime":1694630266237,"results":"12","hashOfConfig":"13"},{"size":416,"mtime":1715282559823,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1694630266238,"results":"15","hashOfConfig":"13"},{"size":668,"mtime":1714868975809,"results":"16","hashOfConfig":"13"},{"size":1171,"mtime":1714869142494,"results":"17","hashOfConfig":"13"},{"size":1632,"mtime":1695278224217,"results":"18","hashOfConfig":"13"},{"size":4054,"mtime":1712001016517,"results":"19","hashOfConfig":"13"},{"size":4903,"mtime":1706835601874,"results":"20","hashOfConfig":"13"},{"size":3398,"mtime":1714869044906,"results":"21","hashOfConfig":"13"},{"size":2729,"mtime":1703546637104,"results":"22","hashOfConfig":"23"},{"size":4380,"mtime":1715224796211,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p8im7v",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"89ofqh",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/sebygarza/Documents/portfolio/eggmodels/src/index.js",[],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/App.js",[],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/reportWebVitals.js",[],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Content.js",[],[],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/components/NavBar.js",[],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Blog.js",[],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Rankings.js",["61"],[],"import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport nflModel from '../python/nflModel.json';\nimport Chart from 'chart.js/auto';\nimport '../Rankings.css';\n\n// Define a dictionary to map team names to their main colors\nconst teamColors = {\n  'Cardinals': '#97233F',\n  'Falcons': '#A71930',\n  'Ravens': '#241773',\n  'Bills': '#00338D',\n  'Panthers': '#0085CA',\n  'Bears': '#0B162A',\n  'Bengals': '#FB4F14',\n  'Browns': '#311D00',\n  'Cowboys': '#041E42',\n  'Broncos': '#FB4F14',\n  'Lions': '#0076B6',\n  'Packers': '#203731',\n  'Texans': '#03202F',\n  'Colts': '#002C5F',\n  'Jaguars': '#006778',\n  'Chiefs': '#E31837',\n  'Raiders': '#000000',\n  'Chargers': '#002A5E',\n  'Rams': '#003594',\n  'Dolphins': '#008E97',\n  'Vikings': '#4F2683',\n  'Patriots': '#002244',\n  'Saints': '#D3BC8D',\n  'Giants': '#0B2265',\n  'Jets': '#125740',\n  'Eagles': '#004C54',\n  'Steelers': '#FFB612',\n  '49ers': '#AA0000',\n  'Seahawks': '#002244',\n  'Buccaneers': '#D50A0A',\n  'Titans': '#0C2340',\n  'Commanders': '#773141',\n};\n\nconst Rankings = () => {\n  const [teamEloData, setTeamEloData] = useState({\n    labels: [],\n    datasets: [],\n  });\n\n  useEffect(() => {\n    const labels = [];\n    const teamDatasets = {};\n\n    // Extract all unique team names from the JSON data\n    const teamNames = [...new Set(nflModel.map((game) => game.Home))];\n\n    // Create a dataset for each team\n    teamNames.forEach((teamName) => {\n      const teamEloRatings = [];\n      const teamGames = nflModel.filter(\n        (game) => game.Home === teamName || game.Away === teamName\n      );\n\n      teamGames.forEach((game) => {\n        const week = game.Week;\n        labels.push(`Week ${week}`);\n        const teamElo = game.Home === teamName ? game.ElopreH : game.ElopreA;\n        teamEloRatings.push(teamElo);\n      });\n\n      // Get the main color for the team from the dictionary\n      const color = teamColors[teamName] || getRandomColor();\n\n      // Create a dataset for the team\n      teamDatasets[teamName] = {\n        label: `${teamName}`,\n        data: teamEloRatings,\n        borderColor: color,\n        fill: false,\n      };\n    });\n\n    setTeamEloData({\n      labels: [...new Set(labels)], // Remove duplicates from labels\n      datasets: Object.values(teamDatasets), // Convert the object of datasets to an array\n    });\n  }, []);\n\n  // Function to generate a random color if a team's color is not defined\n  const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  return (\n    <div className='rankings'>\n      <h1>NFL Elo Ratings</h1>\n      <Line\n        data={teamEloData}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                color: 'grey',\n              },\n              beginAtZero: true,\n              autoSkip: false, // Prevent Chart.js from automatically skipping labels\n              maxTicksLimit: 22, // Set a limit to the maximum number of ticks on the x-axis\n              ticks: {\n                callback: function(val, index) {\n                  // Return a label for every tick, ensuring week 10 is included\n                  return `Week ${index + 1}`;\n                },\n                color: 'black',\n              },\n            },\n            y: {\n              beginAtZero: true,\n              grid: {\n                color: 'grey',\n              },\n              min: 1275,\n              max: 1775,\n              ticks: {\n                color: 'black',\n                stepSize: 25,\n              },\n            },\n          },\n          plugins: {\n            legend: {\n              display: true,\n              labels: {\n                font: {\n                  size: 14,\n                  family: 'Space Mono',\n                  color: '#000',\n                },\n              },\n            },\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Rankings;","/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Parlay.js",["62","63"],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/components/ScheduleNFL.js",[],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/components/Playoffs.js",[],[],"/Users/sebygarza/Documents/portfolio/eggmodels/src/components/ScheduleMLB.js",[],[],[],{"ruleId":"64","severity":1,"message":"65","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":7,"column":18,"nodeType":"66","messageId":"67","endLine":7,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":53,"column":8,"nodeType":"71","endLine":53,"endColumn":31,"suggestions":"72"},"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'setWeek' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calculateParlayOdds'. Either include it or remove the dependency array.","ArrayExpression",["73"],{"desc":"74","fix":"75"},"Update the dependencies array to be: [calculateParlayOdds, selectedWinners, week]",{"range":"76","text":"77"},[1696,1719],"[calculateParlayOdds, selectedWinners, week]"]