{"ast":null,"code":"var _jsxFileName = \"/Users/sebygarza/portfolio/eggmodels/src/components/Content.js\",\n  _s = $RefreshSig$();\n// src/components/Content.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = ({\n  activeTab\n}) => {\n  _s();\n  const [scheduleData, setScheduleData] = useState([]);\n  const [currentWeek, setCurrentWeek] = useState('');\n  useEffect(() => {\n    if (activeTab === 'NFL') {\n      axios.get('https://site.api.espn.com/apis/site/v2/sports/football/nfl/scoreboard').then(response => {\n        // Extract the schedule data from the API response\n        const schedule = response.data.events;\n        setScheduleData(schedule);\n\n        // You may need to adjust how you determine the current week here\n        // For example, if there's a field in the response indicating the current week:\n        // const currentWeek = response.data.currentWeek;\n        // setCurrentWeek(currentWeek);\n      }).catch(error => {\n        console.error('Error fetching NFL schedule data:', error);\n      });\n    }\n  }, [activeTab]);\n  if (activeTab === 'NFL') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nfl-schedule\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentWeek ? `Week ${currentWeek}` : 'NFL Schedule'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matchup-grid\",\n        children: scheduleData.map(game => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matchup-box\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"matchup-name\",\n            children: game.shortName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, `${game.id}-${game.shortName}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_s(Content, \"GEpMeUA9QkuL7PNcgfGgTVM/9rY=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Content","activeTab","_s","scheduleData","setScheduleData","currentWeek","setCurrentWeek","get","then","response","schedule","data","events","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","game","shortName","id","_c","$RefreshReg$"],"sources":["/Users/sebygarza/portfolio/eggmodels/src/components/Content.js"],"sourcesContent":["// src/components/Content.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Content = ({ activeTab }) => {\n  const [scheduleData, setScheduleData] = useState([]);\n  const [currentWeek, setCurrentWeek] = useState('');\n\n  useEffect(() => {\n    if (activeTab === 'NFL') {\n      axios\n        .get('https://site.api.espn.com/apis/site/v2/sports/football/nfl/scoreboard')\n        .then((response) => {\n          // Extract the schedule data from the API response\n          const schedule = response.data.events;\n          setScheduleData(schedule);\n\n          // You may need to adjust how you determine the current week here\n          // For example, if there's a field in the response indicating the current week:\n          // const currentWeek = response.data.currentWeek;\n          // setCurrentWeek(currentWeek);\n        })\n        .catch((error) => {\n          console.error('Error fetching NFL schedule data:', error);\n        });\n    }\n  }, [activeTab]);\n\n  if (activeTab === 'NFL') {\n    return (\n      <div className=\"nfl-schedule\">\n        <h2>{currentWeek ? `Week ${currentWeek}` : 'NFL Schedule'}</h2>\n        <div className=\"matchup-grid\">\n          {scheduleData.map((game) => (\n            <div key={`${game.id}-${game.shortName}`} className=\"matchup-box\">\n              <p className=\"matchup-name\">{game.shortName}</p>\n              {/* Add more game information here */}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default Content;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,IAAIM,SAAS,KAAK,KAAK,EAAE;MACvBJ,KAAK,CACFU,GAAG,CAAC,uEAAuE,CAAC,CAC5EC,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAI,CAACC,MAAM;QACrCR,eAAe,CAACM,QAAQ,CAAC;;QAEzB;QACA;QACA;QACA;MACF,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEf,IAAIA,SAAS,KAAK,KAAK,EAAE;IACvB,oBACEF,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BlB,OAAA;QAAAkB,QAAA,EAAKZ,WAAW,GAAI,QAAOA,WAAY,EAAC,GAAG;MAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/DtB,OAAA;QAAKiB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1Bd,YAAY,CAACmB,GAAG,CAAEC,IAAI,iBACrBxB,OAAA;UAA0CiB,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC/DlB,OAAA;YAAGiB,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEM,IAAI,CAACC;UAAS;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADvC,GAAEE,IAAI,CAACE,EAAG,IAAGF,IAAI,CAACC,SAAU,EAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGnC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,OAAO,IAAI;AACb,CAAC;AAACnB,EAAA,CAzCIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}